apiVersion: apps/v1
kind: Deployment
metadata:
  name: v2-nginx-ingress
  namespace: v2-nginx-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: v2-nginx-ingress
  template:
    metadata:
      labels:
        app: v2-nginx-ingress
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
        prometheus.io/scheme: http
    spec:
      serviceAccountName: v2-nginx-ingress
      containers:
      - image: nginx/nginx-ingress:2.2.2
        imagePullPolicy: IfNotPresent
        name: v2-nginx-ingress
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: readiness-port
          containerPort: 8081
        - name: prometheus
          containerPort: 9113
        readinessProbe:
          httpGet:
            path: /nginx-ready
            port: readiness-port
          periodSeconds: 1
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 101 #nginx
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
          - -nginx-configmaps=$(POD_NAMESPACE)/v2-nginx-config
          - -default-server-tls-secret=$(POD_NAMESPACE)/v2-default-server-secret
         #- -v=3 # Enables extensive logging. Useful for troubleshooting.
         #- -report-ingress-status
         #- -external-service=nginx-ingress
          - -enable-prometheus-metrics
          - -enable-custom-resources=false
          - -enable-latency-metrics
          - -ingress-class=v2-nginx

         #- -global-configuration=$(POD_NAMESPACE)/nginx-configuration
